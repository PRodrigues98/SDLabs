package ttt.grpc.server;

/* these are generated by the ttt-server contract */
import ttt.grpc.TTT;
import ttt.grpc.TTTServiceGrpc;

import io.grpc.stub.StreamObserver;

public class TTTServiceImpl extends TTTServiceGrpc.TTTServiceImplBase {

	private TTTGame ttt = new TTTGame();

	@Override
	public void currentBoard(TTT.CurrentBoardRequest request, StreamObserver<TTT.CurrentBoardResponse> responseObserver) {
		TTT.CurrentBoardResponse response = TTT.CurrentBoardResponse.newBuilder().setCurrentBoard(ttt.currentBoard()).build();
		responseObserver.onNext(response);
		responseObserver.onCompleted();
	}

	@Override
	public synchronized void play(TTT.PlayRequest request, StreamObserver<TTT.PlayResponse> responseObserver) {
		TTT.PlayResponse response = TTT.PlayResponse.newBuilder().setValidPlay(ttt.play(request.getRow(), request.getColumn(), request.getPlayer())).build();
		responseObserver.onNext(response);
		responseObserver.onCompleted();
	}

	@Override
	public void checkWinner(TTT.CheckWinnerRequest request, StreamObserver<TTT.CheckWinnerResponse> responseObserver) {
		TTT.CheckWinnerResponse response = TTT.CheckWinnerResponse.newBuilder().setCurrentResult(ttt.checkWinner()).build();
		responseObserver.onNext(response);
		responseObserver.onCompleted();
	}
}
